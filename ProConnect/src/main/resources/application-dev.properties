# ===== DEVELOPMENT-SPECIFIC =====
server.port=9090

# ===== ACTUAL DATASOURCE CONFIG =====
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASSWORD:secret}
spring.datasource.driver-class-name=org.postgresql.Driver

# ===== YOUR CUSTOM PROPERTIES =====
app.database.name=${DB_NAME}
app.database.host=${DB_HOST}
app.database.port=${DB_PORT}
app.base-url=http://localhost:9090
app.application-name=ProConnect


# ===== JPA =====
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# H2 Console (Fallback if PostgreSQL isn't available)s
spring.h2.console.enabled=false
spring.h2.console.path=/h2-console
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration

# Debugging Settings
# logging.level.root=${LOG_LEVEL:INFO}
# logging.level.org.hibernate.SQL=${HIBERNATE_SQL_LOG:INFO}
# logging.level.org.springframework.security=DEBUG

# SMPT host, this is localhost for development, it should work with your mailpit docker container.
# You can open mailpit ui on http://localhost:8025 to see all emails sent from your application in development
# You will use the host from the provider of your choice in production
spring.mail.host=${MAIL_HOST:localhost}
spring.mail.port=${MAIL_PORT:1025}
spring.mail.username=${MAIL_USERNAME:user}
spring.mail.password=${MAIL_PASSWORD:password}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH:false}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS_ENABLE:false}